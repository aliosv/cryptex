block('candlestick-chart').content()(function() {
    var _this = this,
        /*data = this.ctx.data,*/
        data = [
            /* jslint maxlen: false */
            ['00:00', 607.970, 608.978, 609.305, 609.305, 23.55182], ['00:30', 607.931, 609.305, 608.700, 609.305, 24.26370], ['01:00', 607.884, 608.700, 608.232, 608.700, 20.48549], ['01:30', 607.884, 608.143, 607.887, 608.698, 19.90319], ['02:00', 607.887, 607.887, 608.609, 608.700, 25.43603], ['02:30', 607.000, 608.607, 607.385, 608.688, 21.30007], ['03:00', 606.725, 607.299, 608.685, 608.686, 22.75607], ['03:30', 606.702, 608.685, 607.602, 608.686, 22.85710], ['04:00', 606.764, 607.499, 607.248, 608.686, 23.92925], ['04:30', 607.139, 607.329, 608.684, 608.686, 17.84712], ['05:00', 607.000, 608.684, 608.213, 608.686, 24.75402], ['05:30', 607.202, 608.141, 608.684, 608.686, 21.28733], ['06:00', 608.485, 608.684, 608.649, 608.686, 22.47932], ['06:30', 607.010, 608.485, 607.178, 608.485, 18.53405], ['07:00', 607.011, 607.115, 608.099, 608.686, 16.68284], ['07:30', 607.012, 608.099, 607.722, 608.680, 22.97617], ['08:00', 607.010, 607.916, 608.294, 608.686, 26.53932], ['08:30', 607.010, 608.036, 608.322, 608.686, 24.50435], ['09:00', 607.670, 607.729, 607.757, 608.687, 24.22015], ['09:30', 607.670, 608.075, 608.394, 608.687, 17.30432], ['10:00', 607.693, 608.685, 608.498, 608.687, 18.54042], ['10:30', 607.681, 608.498, 607.681, 608.700, 26.34740], ['11:00', 607.213, 607.681, 607.600, 607.696, 30.95548], ['11:30', 606.600, 607.599, 607.239, 607.600, 26.22558], ['12:00', 606.704, 607.349, 608.111, 608.770, 28.42963], ['12:30', 608.252, 608.397, 609.171, 609.286, 32.02294], ['13:00', 608.999, 609.179, 609.000, 609.296, 21.01971], ['13:30', 608.742, 609.000, 608.742, 609.486, 24.85115], ['14:00', 608.348, 608.742, 608.541, 609.864, 25.25449], ['14:30', 608.544, 608.635, 610.075, 610.334, 28.86385], ['15:00', 609.601, 610.077, 609.687, 610.479, 23.82984], ['15:30', 608.900, 609.604, 608.900, 610.000, 25.14971], ['16:00', 608.002, 608.900, 610.000, 610.000, 27.69509], ['16:30', 609.400, 610.000, 609.411, 610.000, 20.01841], ['17:00', 609.360, 609.411, 609.847, 609.970, 20.75684], ['17:30', 608.690, 610.000, 610.111, 610.315, 30.06851], ['18:00', 609.000, 610.000, 609.513, 610.865, 22.12708], ['18:30', 609.068, 609.367, 610.711, 610.711, 28.82441], ['19:00', 609.999, 610.526, 610.374, 610.878, 24.95623], ['19:30', 608.504, 610.142, 608.904, 610.142, 21.86345], ['20:00', 608.506, 608.904, 609.002, 609.898, 25.48632], ['20:30', 608.700, 609.002, 608.998, 609.289, 19.83081], ['21:00', 608.998, 608.998, 610.001, 610.001, 22.75284], ['21:30', 609.991, 610.001, 610.600, 610.657, 26.82143], ['22:00', 609.431, 610.504, 609.499, 611.010, 24.55429], ['22:30', 609.000, 609.499, 611.051, 611.051, 19.95314], ['23:00', 609.062, 611.111, 611.000, 611.111, 29.23396], ['23:30', 610.944, 611.000, 610.944, 611.780, 23.26810], ['00:00', 609.245, 610.776, 609.245, 610.776, 6.07513]
        ].slice(0, 49),
        candleRange = [
            Math.min.apply(Math, data.map(function(value) {
                return value[1];
            })),
            Math.max.apply(Math, data.map(function(value) {
                return value[4];
            }))
        ],
        histoRange = [
            Math.min.apply(Math, data.map(function(value) {
                return value[5];
            })),
            Math.max.apply(Math, data.map(function(value) {
                return value[5];
            }))
        ],
        candleAxisStep = (candleRange[1] - candleRange[0]) / 4,
        candleAxisValues = (new Array(4)).join('1').split('1').map(function(value, index) {
            return candleRange[0] + candleAxisStep * index;
        }).concat(candleRange[1]),
        histoAxisStep = (histoRange[1] - histoRange[0]) / 4,
        histoAxisValues = (new Array(4)).join('1').split('1').map(function(value, index) {
            return histoRange[0] + histoAxisStep * index;
        }).concat(histoRange[1]),
        timeAxisValues = (new Array(17)).join('1').split('1').map(function(value, index) {
            return data[Math.round(index * (data.length - 1) / 16)][0];
        });

    return [
        {
            elem : 'axis',
            mods : { candle : true },
            content : candleAxisValues.map(function(value, index, array) {
                return {
                    elem : 'label',
                    attrs : {
                        style : 'bottom:' + index / (array.length - 1) * 100 + '%'
                    },
                    content : {
                        elem : 'label-inner',
                        content : value.toFixed(2)
                    }
                };
            })
        },
        {
            elem : 'chart',
            content : [
                {
                    elem : 'levels',
                    content : candleAxisValues.map(function(value, index, array) {
                        return {
                            elem : 'level',
                            attrs : {
                                style : 'bottom:' + index / (array.length - 1) * 100 + '%'
                            }
                        };
                    })
                },
                {
                    elem : 'items',
                    content : data.map(function(item, index) {
                        var candleHeight = (item[4] - item[1]) / (candleRange[1] - candleRange[0]),
                            candleBottom = (item[1] - candleRange[0]) / (candleRange[1] - candleRange[0]),
                            candleBodyHeight = Math.abs(item[3] - item[2]) / (item[4] - item[1]),
                            candleBodyBottom = (item[2] - item[1]) / (item[4] - item[1]),
                            name = _this.generateId();

                        return [
                            {
                                elem : 'tooltip-input',
                                tag : 'input',
                                attrs : { id : 'tooltip-' + index, name : name, type : 'radio' }
                            },
                            {
                                elem : 'item',
                                tag : 'label',
                                attrs : {
                                    for : 'tooltip-' + index
                                },
                                content : [
                                    {
                                        elem : 'candle',
                                        elemMods : { type : item[3] > item[2] ? 'grow' : 'fall' },
                                        attrs : {
                                            style : [
                                                'height:' + candleHeight * 100 + '%',
                                                'bottom:' + candleBottom * 100 + '%'
                                            ].join('; ')
                                        },
                                        content : {
                                            elem : 'candle-body',
                                            attrs : {
                                                style : [
                                                    'height:' + candleBodyHeight * 100 + '%',
                                                    'bottom:' + candleBodyBottom * 100 + '%'
                                                ].join(';')
                                            }
                                        }
                                    },
                                    {
                                        elem : 'histo',
                                        attrs : {
                                            style : 'height:' + ((item[5] - histoRange[0]) / (histoRange[1] - histoRange[0]) * 100) + '%'
                                        }
                                    }
                                ]
                            },
                            {
                                elem : 'tooltip',
                                elemMods : { type : item[3] > item[2] ? 'grow' : 'fall' },
                                content : [
                                    item[0],
                                    'O: ' + item[2],
                                    'H: ' + item[4],
                                    'L: ' + item[1],
                                    'C: ' + item[3],
                                    'V: ' + item[5]
                                ].join(' ')
                            }
                        ];
                    })
                },
                {
                    elem : 'axis',
                    mods : { time : true },
                    content : timeAxisValues.map(function(value) {
                        return {
                            elem : 'label',
                            content : value
                        };
                    })
                }
            ]
        },
        {
            elem : 'axis',
            mods : { histo : true },
            content : histoAxisValues.map(function(value, index, array) {
                return {
                    elem : 'label',
                    attrs : {
                        style : 'bottom:' + index / (array.length - 1) * 100 + '%'
                    },
                    content : {
                        elem : 'label-inner',
                        content : value.toFixed(2)
                    }
                };
            })
        }
    ];
});
